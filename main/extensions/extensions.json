{"blt66346af490785b2f":{"stackHeaders":{"api_key":"blt697fbe5e4449b28d"},"urlPath":"/extensions/blt66346af490785b2f","created_at":"2023-07-10T00:02:47.763Z","updated_at":"2023-07-10T00:02:47.763Z","created_by":"blt1dcc97490c59ff78","updated_by":"blt1dcc97490c59ff78","tags":[],"ACL":[],"_version":1,"title":"Color Picker","config":{},"type":"field","data_type":"text","multiple":false,"srcdoc":"<html>\n<head>\n   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n   <link href=\"https://www.contentstack.com/sdks/contentstack-ui-extensions/dist/latest/ui-extension-sdk.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\">\n   <script src=\"https://www.contentstack.com/sdks/contentstack-ui-extensions/dist/latest/ui-extension-sdk.js\"></script>\n</head>\n<body>\n    <input type=\"color\" id=\"html5colorpicker\" onchange=\"colorChange()\" onclick=\"setFocus()\">\n    <script>\n        // initialise Field Extension\n        window.extensionField = {};\n        \n        // find color input element\n        var colorPickerElement = document.getElementById(\"html5colorpicker\");\n        \n        ContentstackUIExtension.init().then(function(extension) {\n            // make extension object globally available\n            extensionField = extension;\n            \n            // update the field height \n            extensionField.window.updateHeight();\n            \n            // Set default color in Contentstack\n            var defaultColor = \"#000000\";\n            if(!extensionField.field.getData().length){\n                extensionField.field.setData(defaultColor);\n            }\n            \n            // Get current color field value from Contentstack and update the color picker input element\n            colorPickerElement.value = extensionField.field.getData() || defaultColor;\n         \n        })\n        \n        // On color change event, pass new value to Contentstack\n        function colorChange(){\n            extensionField.field.setFocus();\n            extensionField.field.setData(colorPickerElement.value);\n        }\n        \n        function setFocus(){\n             extensionField.field.setFocus();\n        }\n    </script>\n</body>\n</html>"},"blt1f859faff0ac5883":{"stackHeaders":{"api_key":"blt697fbe5e4449b28d"},"urlPath":"/extensions/blt1f859faff0ac5883","created_at":"2023-07-10T00:42:37.759Z","updated_at":"2023-07-10T00:42:37.759Z","created_by":"blt1dcc97490c59ff78","updated_by":"blt1dcc97490c59ff78","tags":[],"ACL":[],"_version":1,"title":"Star Ratings","config":{},"type":"field","data_type":"number","multiple":false,"srcdoc":"<!DOCTYPE html>\n<html>\n<head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link href=\"https://www.contentstack.com/sdks/contentstack-ui-extensions/dist/latest/ui-extension-sdk.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\">\n    <script src=\"https://www.contentstack.com/sdks/contentstack-ui-extensions/dist/latest/ui-extension-sdk.js\"></script>\n    <script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"></script>\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\"/>\n    <style>\n         body{\n           overflow:hidden;\n          }\n        #wrapper {\n            position: relative;\n        }\n        .user-rating {\n            direction: rtl;\n            font-size: 20px;\n            unicode-bidi: bidi-override;\n            padding: 9px 18px;\n            display: inline-block;\n        }\n        .user-rating input {\n            opacity: 0;\n            position: relative;\n            left: -15px;\n            z-index: 2;\n            cursor: pointer;\n        }\n        .user-rating span.star:before {\n            color: #777777;\n            content:\"ï€†\";\n            /*padding-right: 5px;*/\n        }\n        .user-rating span.star {\n            display: inline-block;\n            font-family: FontAwesome;\n            font-style: normal;\n            font-weight: normal;\n            position: relative;\n            z-index: 1;\n        }\n        .user-rating span {\n            margin-left: -15px;\n        }\n        .user-rating span.star:before {\n            color: #777777;\n            content:\"\\f006\";\n            /*padding-right: 5px;*/\n        }\n        .user-rating input:hover + span.star:before, .user-rating input:hover + span.star ~ span.star:before, .user-rating input:checked + span.star:before, .user-rating input:checked + span.star ~ span.star:before {\n            color: #ffd100;\n            content:\"\\f005\";\n        }\n    .selected-rating{\n        color: #ffd100;\n        font-weight: bold;\n        font-size: 3em;\n    }\n</style>\n\n</head>\n<body>\n<div id=\"wrapper\">\n    <form id=\"user-rating-form\" onchange=\"ratingChange()\" onclick=\"setFocus()\">\n        <span class=\"user-rating\">\n            <input type=\"radio\" name=\"rating\" value=\"5\"><span class=\"star\"></span>\n            <input type=\"radio\" name=\"rating\" value=\"4\"><span class=\"star\"></span>\n            <input type=\"radio\" name=\"rating\" value=\"3\"><span class=\"star\"></span>\n            <input type=\"radio\" name=\"rating\" value=\"2\"><span class=\"star\"></span>\n            <input type=\"radio\" name=\"rating\" value=\"1\"><span class=\"star\"></span>\n        </span>\n    </form>\n</div>\n<script>\n        // initialise Field Extension \n        var extensionField;\n        \n        // Initialize and set the default or saved value for extension\n        ContentstackUIExtension.init().then(function(extension) {\n            // make extension object globally available\n            extensionField = extension;\n            // Get current Rating value from Contentstack and update the Rating element\n            var initialValue = (extension && extension.field && extension.field.getData() && extension.field.getData() !== null) ? extension.field.getData() : 0;\n            $(\"input[name='rating'][value=\"+initialValue+\"]\").attr('checked', true);\n            extension.window.updateHeight();\n            ratingChange();\n        })\n        \n        // On Rating change event, pass new value to Contentstack\n          function ratingChange(){\n            var ratingval = parseInt($('[name=\"rating\"]:checked').val());\n            ratingval = (ratingval && ratingval !== null) ? ratingval : 0; \n            extensionField.field.setData(ratingval).then(function(){\n    \t    }).catch(function(error){\n    \t    })\n        }\n        \n        function setFocus(){\n            extensionField.field.setFocus();\n        }\n</script>\n</body>\n</html>"}}